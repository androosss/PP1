package rs.ac.bg.etf.pp1;

import rs.ac.bg.etf.pp1.ast.*;

/*import rs.ac.bg.etf.pp1.CounterVisitor.FormParamCounter;
import rs.ac.bg.etf.pp1.CounterVisitor.VarCounter;
import rs.ac.bg.etf.pp1.ast.AddExpr;
import rs.ac.bg.etf.pp1.ast.Assignment;
import rs.ac.bg.etf.pp1.ast.Const;
import rs.ac.bg.etf.pp1.ast.Designator;
import rs.ac.bg.etf.pp1.ast.FormalParamDecl;
import rs.ac.bg.etf.pp1.ast.FuncCall;
import rs.ac.bg.etf.pp1.ast.MethodDecl;
import rs.ac.bg.etf.pp1.ast.MethodTypeName;
import rs.ac.bg.etf.pp1.ast.PrintStmt;
import rs.ac.bg.etf.pp1.ast.ReturnExpr;
import rs.ac.bg.etf.pp1.ast.ReturnNoExpr;
import rs.ac.bg.etf.pp1.ast.SyntaxNode;
import rs.ac.bg.etf.pp1.ast.VarDecl;
import rs.ac.bg.etf.pp1.ast.VisitorAdaptor;
import rs.etf.pp1.mj.runtime.Code;
import rs.etf.pp1.symboltable.concepts.Obj;*/

public class CodeGenerator extends VisitorAdaptor {
	
	private int varCount;
	
	private int paramCnt;
	
	private int mainPc;
	
	public int getMainPc() {
		return mainPc;
	}
	
	private int opcoder(String instruction) {
		switch (instruction) {
		case "load":
			return 1;
		case "store":
			return 6;
		case "getstatic":
			return 11;
		case "putstatic":
			return 12;
		case "getfield":
			return 13;
		case "putfield":
			return 14;
		case "const":
			return 22;
		case "add":
			return 23;
		case "sub":
			return 24;
		case "mul":
			return 25;
		case "div":
			return 26;
		case "rem":
			return 27;
		case "neg":
			return 28;
		case "newarray":
			return 33;
		case "aload":
			return 34;
		case "astore":
			return 35;
		case "baload":
			return 36;
		case "bastore":
			return 37;
		case "arraylength":
			return 38;
		case "pop":
			return 39;
		}
		return -1;
	}
}
