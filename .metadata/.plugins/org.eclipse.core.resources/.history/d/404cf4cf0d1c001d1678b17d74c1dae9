// generated with ast extension for cup
// version 0.8
// 14/7/2022 22:15:8


package rs.ac.bg.etf.pp1.ast;

public class BaseCall extends BaseFactor {

    private Designator Designator;
    private CallOptional CallOptional;

    public BaseCall (Designator Designator, CallOptional CallOptional) {
        this.Designator=Designator;
        if(Designator!=null) Designator.setParent(this);
        this.CallOptional=CallOptional;
        if(CallOptional!=null) CallOptional.setParent(this);
    }

    public Designator getDesignator() {
        return Designator;
    }

    public void setDesignator(Designator Designator) {
        this.Designator=Designator;
    }

    public CallOptional getCallOptional() {
        return CallOptional;
    }

    public void setCallOptional(CallOptional CallOptional) {
        this.CallOptional=CallOptional;
    }

    public void accept(Visitor visitor) {
        visitor.visit(this);
    }

    public void childrenAccept(Visitor visitor) {
        if(Designator!=null) Designator.accept(visitor);
        if(CallOptional!=null) CallOptional.accept(visitor);
    }

    public void traverseTopDown(Visitor visitor) {
        accept(visitor);
        if(Designator!=null) Designator.traverseTopDown(visitor);
        if(CallOptional!=null) CallOptional.traverseTopDown(visitor);
    }

    public void traverseBottomUp(Visitor visitor) {
        if(Designator!=null) Designator.traverseBottomUp(visitor);
        if(CallOptional!=null) CallOptional.traverseBottomUp(visitor);
        accept(visitor);
    }

    public String toString(String tab) {
        StringBuffer buffer=new StringBuffer();
        buffer.append(tab);
        buffer.append("BaseCall(\n");

        if(Designator!=null)
            buffer.append(Designator.toString("  "+tab));
        else
            buffer.append(tab+"  null");
        buffer.append("\n");

        if(CallOptional!=null)
            buffer.append(CallOptional.toString("  "+tab));
        else
            buffer.append(tab+"  null");
        buffer.append("\n");

        buffer.append(tab);
        buffer.append(") [BaseCall]");
        return buffer.toString();
    }
}
